<% include ../../../../partials/head %>
<% include ../../../../partials/nav %>

<%
    function getType(key) {
        return types.filter(t => !!settingProps[key] && settingProps[key].type == t.id)[0];
    }
%>

<%
    let arr = Object.keys(settings).filter(v => v != "user" && !!settingProps[v]).map(v => {
        return settingProps[v].category || "Misc"
    }).filter((v, i, a) => a.indexOf(v) == i).sort((a, b) => {
        if (b == "Misc")
            return 1;
        if (a == "Misc")
            return -1;
        return a.localeCompare(b);
    });
%>

<div class="container content page">
    <h1 class="title is-1 has-text-centered">Viewing user configuration</h1>
    <h3 class="subtitle is-3 has-text-centered"><%= user.tag %></h3>

    <div class="tabs-wrapper">
        <div class="tabs">
            <ul class="nav nav-tabs" id="tabs" role="tablist">
                <% for (let cat of arr) { %>
                    <% let id = (cat || "Misc").toLowerCase().replace(/\s+/g, "-"); %>
                    <% let s = arr.indexOf(cat) == 0 ? " active"  : "" %>
                    <li class="nav-item">
                        <a class="nav-link<%=s%>" id="<%= id %>-tab" data-toggle="tab" role="tab" aria-controls="<%= id %>" aria-selected="<%= s != "" %>" href="#<%= id %>"><%= cat || "Misc" %></a>
                    </li>
                <% } %>
            </ul>
        </div>
        <div class="tabs-content">
            <% let arr2 = arr %>
            <% for (let cat of arr2) { %>
                <% let id = (cat || "Misc").toLowerCase().replace(/\s+/g, "-"); %>
                <% let s = arr2.indexOf(cat) == 0 ? " show active" : "" %>
                <div class="tab-pane fade<%= s %>" id="<%= id %>" role="tabpanel" aria-labelledby="<%= id %>-tab">
                    <div class="row is-multiline">
                        <% let arr = Object.keys(settings).sort((a, b) => a.localeCompare(b)).filter(v => v != "user" && !!settingProps[v] && (settingProps[v].category || "Misc") == cat) %>
                        <% console.log(arr, cat) %>
                        <% for (let setting of arr) { %>
                            <% let type = getType(setting); %>
                            <% if (setting == "guildID") continue; %>
                            <div class="col-6-md">
                                <%- arr.indexOf(setting) > 1 ? "<hr />" : "" %>
                                <div class="field">
                                    <label class="label h5"><%= settingProps[setting].name %></label>
                                    <p class="text-muted"><%- render(null, (settingProps[setting] || {}).description || "No description.").replace(/<\/?p>/g, "") %></p>
                                    <div class="">
                                        <% if (settingProps[setting].extendable) { %>
                                            <p>
                                                <%- settings[setting].map(set => {
                                                let pretty = type.webRender ? type.webRender(client, null, set, setting + "[]", settingProps[setting]) : set
                                                return pretty == type.nullValue ? "This value is empty." : render(guild, pretty).trim().replace(/(^<p>|<\/p>$)/g, "");
                                                }).join(settingProps[setting].short ? ", " : "<br>") || "This value is empty."; %>
                                            </p>
                                        <% } else { %>
                                            <% let pretty = type.webRender ? type.webRender(client, null, settings[setting], setting, settingProps[setting]) : setting %>
                                            <%- pretty == type.nullValue ? "This value is empty." : render(null, pretty).trim(); %>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                    </div>
                </div>
            <% } %>
        </div>
    </div>
    <br>
    <div class="buttons has-addons is-left">
        <a href="/user">
            <span>‚Üê Back</span>
        </a>
    </div>
</div>
    
<% include ../../../../partials/footer %>